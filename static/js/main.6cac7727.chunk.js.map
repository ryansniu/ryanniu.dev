{"version":3,"sources":["components/StickyNav.js","sections/Welcome.js","sections/About.js","sections/Experience.js","sections/Projects.js","sections/Resume.js","sections/Footer.js","App.js","serviceWorker.js","index.js"],"names":["StickyNav","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","off","Navbar","sticky","expand","bg","variant","to","smooth","offset","duration","Brand","Toggle","aria-controls","Collapse","id","Nav","className","spy","style","textDecoration","textAlign","Link","Welcome","Container","fluid","Row","Col","lg","Image","src","roundedCircle","alt","fontSize","href","target","rel","About","Experience","Projects","Card","border","text","Body","paddingBottom","maxHeight","Title","lineHeight","paddingTop","color","padding","Text","minHeight","float","ListGroup","ListGroupItem","backgroundColor","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","pdfWidth","Math","min","file","pageNumber","renderAnnotationLayer","renderTextLayer","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kXAkBA,IA2CeA,EA3CG,WAAO,IAAD,EAbxB,WAA0B,IAAD,EACCC,mBAAS,CAAC,EAAG,IADd,mBAChBC,EADgB,KACVC,EADU,KAUvB,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAIiBS,GADF,mBACfC,EADe,KAElBC,GAFkB,KAEZD,EAAQ,KAAO,IAAM,GAC/B,OACE,kBAACE,EAAA,EAAD,CAAQC,OAAO,MAAMC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACjD,kBAAC,OAAD,CAAMC,GAAG,UAAUC,QAAQ,EAAMC,QAAS,IAAMR,EAAKS,SAAW,KAC9D,kBAACR,EAAA,EAAOS,MAAR,KACE,0CAGJ,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,YACf,kBAACD,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMT,GAAG,QAAQC,QAAQ,EAAMU,KAAK,EAAMT,QAAS,GAAKR,EAAKS,SAAW,IAAKS,MAAO,CAAEC,eAAgB,OAAQC,UAAW,WACvH,kBAACL,EAAA,EAAIM,KAAL,KACE,uCAIJ,kBAAC,OAAD,CAAMf,GAAG,aAAaC,QAAQ,EAAMU,KAAK,EAAMT,QAAS,GAAKR,EAAKS,SAAW,IAAKS,MAAO,CAAEC,eAAgB,OAAQC,UAAW,WAC5H,kBAACL,EAAA,EAAIM,KAAL,KACE,4CAIJ,kBAAC,OAAD,CAAMf,GAAG,WAAWC,QAAQ,EAAMU,KAAK,EAAMT,QAAS,GAAKR,EAAKS,SAAW,IAAKS,MAAO,CAAEC,eAAgB,OAAQC,UAAW,WAC1H,kBAACL,EAAA,EAAIM,KAAL,KACE,0CAIJ,kBAAC,OAAD,CAAMf,GAAG,SAASC,QAAQ,EAAMU,KAAK,EAAMT,QAAS,GAAKR,EAAKS,SAAW,IAAKS,MAAO,CAAEC,eAAgB,OAAQC,UAAW,WACxH,kBAACL,EAAA,EAAIM,KAAL,KACE,4C,oCCdCC,G,MAlCC,WACZ,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKT,UAAU,WACX,kBAACU,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,CAAOZ,UAAU,MAAMa,IAAK,WAAYC,eAAa,EAACN,OAAK,EAACO,IAAI,cAEpE,kBAACL,EAAA,EAAD,CAAKC,GAAI,EAAGX,UAAU,cAClB,wBAAIE,MAAO,CAACc,SAAU,KAAtB,iBACA,kMAKA,6BACI,uBAAGC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACtD,kBAACP,EAAA,EAAD,CAAOZ,UAAU,aAAaa,IAAK,iBAAkBL,OAAK,EAACO,IAAI,YAEnE,uBAAGE,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAChE,kBAACP,EAAA,EAAD,CAAOZ,UAAU,aAAaa,IAAK,mBAAoBL,OAAK,EAACO,IAAI,cAErE,uBAAGE,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBACvD,kBAACP,EAAA,EAAD,CAAOZ,UAAU,aAAaa,IAAK,kBAAmBL,OAAK,EAACO,IAAI,aAEpE,uBAAGE,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACtD,kBAACP,EAAA,EAAD,CAAOZ,UAAU,aAAaa,IAAK,gBAAiBL,OAAK,EAACO,IAAI,iBCnB3EK,EAPD,kBACZ,kBAACb,EAAA,EAAD,CAAWC,OAAK,EAACR,UAAU,QAAQF,GAAG,SAClC,qCACA,4ECISuB,EAPI,kBACjB,kBAACd,EAAA,EAAD,CAAWC,OAAK,EAACR,UAAU,aAAaF,GAAG,cACzC,0CACA,yE,0BCmLWwB,G,MArLE,kBACf,kBAACf,EAAA,EAAD,CAAWC,OAAK,EAACR,UAAU,WAAWF,GAAG,YACvC,wCACA,kFACA,kBAACW,EAAA,EAAD,CAAKD,OAAK,EAACR,UAAU,iBACnB,kBAACU,EAAA,EAAD,CAAKF,OAAK,EAACG,GAAI,EAAGX,UAAU,gBAC1B,kBAACuB,EAAA,EAAD,CAAMvB,UAAU,eAAeZ,GAAG,OAAOoC,OAAO,UAAUC,KAAK,SAC7D,kBAACF,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAACyB,cAAe,IAAKC,UAAW,SAChD,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACjB,EAAA,EAAD,CAAOC,IAAK,mBAAoBb,UAAU,cAAce,IAAI,gBAC5D,yBAAKb,MAAO,CAAC4B,WAAY,UAAWC,WAAY,WAC9C,0BAAM7B,MAAO,CAACc,SAAU,WAAxB,cAEE,6BAAK,6BAAK,6BAAK,6BACf,uBAAGd,MAAO,CAAC8B,MAAO,UAAWhB,SAAU,SAAvC,eACA,6BAAK,6BAAK,6BACV,2BAAG,uBAAGd,MAAO,CAAC8B,MAAO,OAAQhB,SAAU,SAApC,gCAKX,kBAACO,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAAC+B,QAAS,mBAAoBD,MAAO,YACrD,kBAACT,EAAA,EAAKW,KAAN,CAAWhC,MAAO,CAACiC,UAAW,QAA9B,kqBAOA,yBAAKjC,MAAO,CAACkC,MAAO,QAASR,UAAW,QACpC,uBAAGX,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBAClE,kBAACP,EAAA,EAAD,CAAOZ,UAAU,gBAAgBa,IAAK,kBAAmBL,OAAK,EAACO,IAAI,aAEvE,uBAAGE,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBACnE,kBAACP,EAAA,EAAD,CAAOZ,UAAU,gBAAgBa,IAAK,iBAAkBL,OAAK,EAACO,IAAI,cAI5E,kBAACsB,EAAA,EAAD,CAAWrC,UAAU,oBACnB,kBAACsC,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,2BADF,eAIA,kBAACM,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,kBADF,0FAQN,kBAACtB,EAAA,EAAD,CAAKF,OAAK,EAACG,GAAI,EAAGX,UAAU,gBAC1B,kBAACuB,EAAA,EAAD,CAAMvB,UAAU,eAAeZ,GAAG,OAAOoC,OAAO,YAAYC,KAAK,SAC/D,kBAACF,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAACyB,cAAe,IAAKC,UAAW,SAChD,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACjB,EAAA,EAAD,CAAOC,IAAK,iBAAkBb,UAAU,cAAce,IAAI,cAC1D,yBAAKb,MAAO,CAAC4B,WAAY,UAAWC,WAAY,WAC9C,0BAAM7B,MAAO,CAACc,SAAU,WAAxB,YAEE,6BAAK,6BAAK,6BAAK,6BACf,uBAAGd,MAAO,CAAC8B,MAAO,UAAWhB,SAAU,SAAvC,sBAKR,kBAACO,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAAC+B,QAAS,mBAAoBD,MAAO,YACrD,kBAACT,EAAA,EAAKW,KAAN,CAAWhC,MAAO,CAACiC,UAAW,QAA9B,oaAKA,yBAAKjC,MAAO,CAACkC,MAAO,UAChB,uBAAGnB,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAChE,kBAACP,EAAA,EAAD,CAAOZ,UAAU,gBAAgBa,IAAK,kBAAmBL,OAAK,EAACO,IAAI,aAEvE,uBAAGE,KAAK,yCAAyCC,OAAO,SAASC,IAAI,uBACjE,kBAACP,EAAA,EAAD,CAAOZ,UAAU,gBAAgBa,IAAK,iBAAkBL,OAAK,EAACO,IAAI,cAI5E,kBAACsB,EAAA,EAAD,CAAWrC,UAAU,oBACnB,kBAACsC,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,2BADF,MAIA,kBAACM,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,kBADF,4CASR,kBAACvB,EAAA,EAAD,CAAKD,OAAK,EAACR,UAAU,iBACrB,kBAACU,EAAA,EAAD,CAAKF,OAAK,EAACG,GAAI,EAAGX,UAAU,gBACxB,kBAACuB,EAAA,EAAD,CAAMvB,UAAU,eAAeZ,GAAG,OAAOoC,OAAO,YAAYC,KAAK,SAC/D,kBAACF,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAACyB,cAAe,IAAKC,UAAW,SAChD,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACjB,EAAA,EAAD,CAAOC,IAAK,0BAA2Bb,UAAU,cAAce,IAAI,uBACnE,yBAAKb,MAAO,CAAC4B,WAAY,UAAWC,WAAY,WAC9C,0BAAM7B,MAAO,CAACc,SAAU,WAAxB,qBAEE,6BAAK,6BAAK,6BAAK,6BACf,uBAAGd,MAAO,CAAC8B,MAAO,UAAWhB,SAAU,SAAvC,4BAKR,kBAACO,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAAC+B,QAAS,mBAAoBD,MAAO,YACrD,kBAACT,EAAA,EAAKW,KAAN,g6BAWA,yBAAKhC,MAAO,CAACkC,MAAO,YAGtB,kBAACC,EAAA,EAAD,CAAWrC,UAAU,oBACnB,kBAACsC,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,2BADF,YAIA,kBAACM,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,kBADF,mBAQN,kBAACtB,EAAA,EAAD,CAAKF,OAAK,EAACG,GAAI,EAAGX,UAAU,gBAC1B,kBAACuB,EAAA,EAAD,CAAMvB,UAAU,eAAeZ,GAAG,OAAOoC,OAAO,UAAUC,KAAK,SAC7D,kBAACF,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAACyB,cAAe,IAAKC,UAAW,SAChD,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACjB,EAAA,EAAD,CAAOC,IAAK,iBAAkBb,UAAU,cAAce,IAAI,cAC1D,yBAAKb,MAAO,CAAC4B,WAAY,UAAWC,WAAY,WAC9C,0BAAM7B,MAAO,CAACc,SAAU,WAAxB,YAEE,6BAAK,6BAAK,6BAAK,6BACf,uBAAGd,MAAO,CAAC8B,MAAO,UAAWhB,SAAU,SAAvC,yBACA,6BAAK,6BAAK,6BACV,2BAAG,uBAAGd,MAAO,CAAC8B,MAAO,OAAQhB,SAAU,SAApC,kBAKX,kBAACO,EAAA,EAAKG,KAAN,CAAWxB,MAAO,CAAC+B,QAAS,mBAAoBD,MAAO,YACrD,kBAACT,EAAA,EAAKW,KAAN,8gCAQA,yBAAKhC,MAAO,CAACkC,MAAO,YAGtB,kBAACC,EAAA,EAAD,CAAWrC,UAAU,oBACnB,kBAACsC,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,2BADF,YAIA,kBAACM,EAAA,EAAD,CAAejD,QAAQ,QAAQa,MAAO,CAACqC,gBAAiB,YACtD,uBAAGrC,MAAO,CAAC8B,MAAO,YAAlB,kBADF,uB,eCzKZQ,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAeA,IAmBeC,EAnBA,WAAO,IAAD,EAbrB,WAA0B,IAAD,EACCxE,mBAAS,CAAC,EAAG,IADd,mBAChBC,EADgB,KACVC,EADU,KAUvB,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAIiBS,GADL,mBACZC,EADY,KAEf8D,GAFe,KAEJC,KAAKC,IAAIhE,EAAQ,GAAI,OACpC,OACE,kBAACwB,EAAA,EAAD,CAAWC,OAAK,EAACR,UAAU,SAASF,GAAG,UACrC,sCACA,sFACA,kBAACW,EAAA,EAAD,CAAKT,UAAU,cACb,kBAAC,IAAD,CAAUgD,KAAM,eACd,kBAAC,IAAD,CAAMC,WAAY,EAAGC,uBAAuB,EAAOC,iBAAiB,EAAOpE,MAAO8D,MAGtF,iEAAsC,uBAAG5B,KAAM,cAAeC,OAAO,UAA/B,QAAtC,OCnBSkC,EAVA,kBACb,kBAAC7C,EAAA,EAAD,CAAWC,OAAK,EAACR,UAAU,UACzB,8BACI,uBAAGE,MAAO,CAAC8B,MAAO,YAAlB,qFACA,6BACA,0BAAM9B,MAAO,CAAC8B,MAAO,YAArB,yBCeOqB,G,OAZH,kBACR,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPYC,QACW,cAA7B7E,OAAO8E,SAASC,UAEe,UAA7B/E,OAAO8E,SAASC,UAEhB/E,OAAO8E,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.6cac7727.chunk.js","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\nimport { Link } from 'react-scroll'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport './StickyNav.css'\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst StickyNav = () => {\r\n  const [width, height] = useWindowSize();\r\n  var off = width < 667 ? -210 : 0;\r\n  return (\r\n    <Navbar sticky=\"top\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"welcome\" smooth={true} offset={-100 + off} duration= {500}>\r\n        <Navbar.Brand>\r\n          <h1>Ryan Niu</h1>\r\n        </Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <Link to=\"about\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>About</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n\r\n          <Link to=\"experience\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Experience</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n\r\n          <Link to=\"projects\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Projects</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n          \r\n          <Link to=\"resume\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Resume</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default StickyNav;","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\nimport './Welcome.css'\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <Container fluid>\r\n            <Row className='welcome'>\r\n                <Col lg={7}>\r\n                    <Image className='pfp' src={'/pfp.jpg'} roundedCircle fluid alt='Ryan Niu'/>\r\n                </Col>\r\n                <Col lg={5} className='intro-text'>\r\n                    <h1 style={{fontSize: 50}}>Hi, I'm Ryan!</h1>\r\n                    <text>Computer Engineer from UC Santa Barbara\r\n                        trying to learn webdev but it clearly is a struggle.\r\n                        This website is also under construction.\r\n                        Try not to break anything!\r\n                    </text>\r\n                    <div>\r\n                        <a href=\"https://github.com/ryansniu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/github-64.png'} fluid alt='GitHub'/>\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/ryansniu/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/linkedin-64.png'} fluid alt='LinkedIn'/>\r\n                        </a>\r\n                        <a href=\"https://devpost.com/ryansniu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/devpost-64.png'} fluid alt='Devpost'/>\r\n                        </a>\r\n                        <a href=\"mailto:ryanniu314@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/email-64.png'} fluid alt='Email'/>\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\nimport { Image, Container, Row, Col, Card } from 'react-bootstrap'\r\n\r\nconst About = () => (\r\n  <Container fluid className=\"about\" id=\"about\">\r\n      <h1>About</h1>\r\n      <h5>Learn more about my hobbies and interests.</h5>\r\n  </Container>\r\n);\r\n\r\nexport default About","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Experience = () => (\r\n  <Container fluid className=\"experience\" id=\"experience\">\r\n    <h1>Experience</h1>\r\n    <h5>A summary of my skills in the industry.</h5>\r\n  </Container>\r\n);\r\n\r\nexport default Experience","import React from 'react'\r\nimport { Image, Container, Row, Col, Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport './Project.css'\r\n\r\nconst Projects = () => (\r\n  <Container fluid className=\"projects\" id=\"projects\">\r\n    <h1>Projects</h1>\r\n    <h5>A comprehensive portfolio of my personal projects.</h5>\r\n    <Row fluid className=\"project-stack\">\r\n      <Col fluid lg={5} className=\"project-deck\">\r\n        <Card className=\"project-card\" bg='dark' border='warning' text='light'>\r\n          <Card.Body style={{paddingBottom: \"0\", maxHeight: \"6rem\"}}>\r\n            <Card.Title>\r\n              <Image src={'/voice-order.png'} className=\"project-img\" alt=\"Voice Order\"/>\r\n              <div style={{lineHeight: \"0.23rem\", paddingTop: \"0.6rem\"}}>\r\n                <text style={{fontSize: \"1.5rem\"}}>\r\n                  Voice Order\r\n                  <br/><br/><br/><br/>\r\n                  <i style={{color: \"#9A9DA0\", fontSize: \"1rem\"}}>SB Hacks VI</i>\r\n                  <br/><br/><br/>\r\n                  <b><i style={{color: \"gold\", fontSize: \"1rem\"}}>Best Amazon Alexa Skill</i></b>\r\n                </text>\r\n              </div>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <Card.Body style={{padding: \"0 1rem 1rem 1rem\", color: \"#CCCECF\"}}>\r\n            <Card.Text style={{minHeight: \"80%\"}}>\r\n              VoiceOrder is a general-purpose voice AI that helps automate ordering at drive-thru services and small businesses.\r\n              Companies can waste thousands of dollars building custom speech recognition bots, and this application replaces the time and money spent to create one with a simple Amazon Echo.\r\n              To create VoiceOrder, we combined many technologies, starting with the Alexa Skills Kit to process user words.\r\n              We then processed the words using AWS Lambda’s serverless framework, and extracted user intent using the Google Cloud AutoML NLP API.\r\n              Finally, we displayed the user’s order on a React.js application and displayed the price for each item and the total cost.\r\n            </Card.Text>\r\n            <div style={{float: \"right\", maxHeight: \"20%\"}}>\r\n                <a href=\"https://devpost.com/software/voiceorder\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <Image className='project-icons' src={'/devpost-64.png'} fluid alt='Devpost'/>\r\n                </a>\r\n                <a href=\"https://github.com/connorlien/VoiceOrder\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <Image className='project-icons' src={'/github-64.png'} fluid alt='GitHub'/>\r\n                </a>\r\n            </div>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Programming Languages: </b>\r\n              Python, C++\r\n            </ListGroupItem>\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Technologies: </b>\r\n              Alexa Skills Kit, AWS Lambda, Google Cloud Natural Language API, Firebase, React.js\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col fluid lg={5} className=\"project-deck\">\r\n        <Card className=\"project-card\" bg='dark' border='secondary' text='light'>\r\n          <Card.Body style={{paddingBottom: \"0\", maxHeight: \"6rem\"}}>\r\n            <Card.Title>\r\n              <Image src={'/blue-spot.png'} className=\"project-img\" alt=\"Blue Spot\"/>\r\n              <div style={{lineHeight: \"0.23rem\", paddingTop: \"0.6rem\"}}>\r\n                <text style={{fontSize: \"1.5rem\"}}>\r\n                  Blue Spot\r\n                  <br/><br/><br/><br/>\r\n                  <i style={{color: \"#9A9DA0\", fontSize: \"1rem\"}}>TreeHacks 2020</i>\r\n                </text>\r\n              </div>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <Card.Body style={{padding: \"0 1rem 1rem 1rem\", color: \"#CCCECF\"}}>\r\n            <Card.Text style={{minHeight: \"80%\"}}>\r\n              BlueSpot is a nifty mobile AR message visualization application designed for posting location-specific messages. \r\n              Users walk around the physical world, typing messages and dropping them in \"blue spots\" for others to discover and read them. \r\n              The application was created entirely using Unity Engine, utilizing the ARFoundation package to overlay virtual objects on the camera view and the Firebase Realtime Database API.\r\n            </Card.Text>\r\n            <div style={{float: \"right\"}}>\r\n                <a href=\"https://devpost.com/software/bluespot\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <Image className='project-icons' src={'/devpost-64.png'} fluid alt='Devpost'/>\r\n                </a>\r\n                <a href=\"https://github.com/connorlien/BlueSpot\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <Image className='project-icons' src={'/github-64.png'} fluid alt='GitHub'/>\r\n                </a>\r\n            </div>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Programming Languages: </b>\r\n              C#\r\n            </ListGroupItem>\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Technologies: </b>\r\n              Unity Engine, Firebase, ARFoundation\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row fluid className=\"project-stack\">\r\n    <Col fluid lg={5} className=\"project-deck\">\r\n        <Card className=\"project-card\" bg='dark' border='secondary' text='light'>\r\n          <Card.Body style={{paddingBottom: \"0\", maxHeight: \"6rem\"}}>\r\n            <Card.Title>\r\n              <Image src={'/primes-and-dragons.png'} className=\"project-img\" alt=\"Primes and Dragons\"/>\r\n              <div style={{lineHeight: \"0.23rem\", paddingTop: \"0.6rem\"}}>\r\n                <text style={{fontSize: \"1.5rem\"}}>\r\n                  Primes and Dragons\r\n                  <br/><br/><br/><br/>\r\n                  <i style={{color: \"#9A9DA0\", fontSize: \"1rem\"}}>Ongoing Solo Project</i>\r\n                </text>\r\n              </div>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <Card.Body style={{padding: \"0 1rem 1rem 1rem\", color: \"#CCCECF\"}}>\r\n            <Card.Text>\r\n              Primes and Dragons is a matching RPG created in Spring 2016 as my second semester freshman year Java game project.\r\n              The goal of the game is to beat the final boss on the 50th floor.\r\n              Each enemy has a number associated with it.\r\n              In order to attack the enemy, the player must connect a string of numbers on the board to create a multiple of the associated number.\r\n              The damage dealt is calculated using the length of the created number and the sum of its digits.\r\n              Because the digit “0” will not add to the sum of the digits, connecting a “0” will heal the player instead, with more “0”’s healing more points.\r\n              If the connected number is not divisible by any number on the screen, however, then the player will not attack nor heal, losing a turn.\r\n              This game is turn-based, meaning that the enemy and the player attacks in order.\r\n              I am currently working on porting and finishing the game in Unity.\r\n            </Card.Text>\r\n            <div style={{float: \"right\"}}>\r\n            </div>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Programming Languages: </b>\r\n              Java, C#\r\n            </ListGroupItem>\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Technologies: </b>\r\n              Unity Engine\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col fluid lg={5} className=\"project-deck\">\r\n        <Card className=\"project-card\" bg='dark' border='warning' text='light'>\r\n          <Card.Body style={{paddingBottom: \"0\", maxHeight: \"6rem\"}}>\r\n            <Card.Title>\r\n              <Image src={'/touhou-dx.png'} className=\"project-img\" alt=\"Touhou DX\"/>\r\n              <div style={{lineHeight: \"0.23rem\", paddingTop: \"0.6rem\"}}>\r\n                <text style={{fontSize: \"1.5rem\"}}>\r\n                  Touhou DX\r\n                  <br/><br/><br/><br/>\r\n                  <i style={{color: \"#9A9DA0\", fontSize: \"1rem\"}}>CodeDay Bay Area 2018</i>\r\n                  <br/><br/><br/>\r\n                  <b><i style={{color: \"gold\", fontSize: \"1rem\"}}>Best Game</i></b>\r\n                </text>\r\n              </div>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <Card.Body style={{padding: \"0 1rem 1rem 1rem\", color: \"#CCCECF\"}}>\r\n            <Card.Text>\r\n              Touhou DX is a calculus-based bullet hell game created in February 2018 at the CodeDay Bay Area Hackathon at Horizons, SF, written entirely in Java.\r\n              The player controls a character who can move across the screen and can rapidly shoot infinite bullets.\r\n              However, the player must dodge the enemy’s bullets, as well as a mathematical graph that draws itself.\r\n              The player has 3 lives and 3 bombs, which can clear out enemy projectiles and function points.\r\n              I learned a lot from writing this program, such as utilizing the ScheduledExecutor class in Java in order to write an update function without a framework, and using Java lambdas and abstract classes to make the boss’s bullet patterns and the projectiles’ move paths as a function of time, allowing me to create fancy looking bullet patterns.\r\n              Right now, I am working on a remaster using Unity. In the remastered version, I wrote a script that can draw a mathematical function, which can correctly handle discontinuities as well as have its scale altered at runtime.\r\n            </Card.Text>\r\n            <div style={{float: \"right\"}}>\r\n            </div>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Programming Languages: </b>\r\n              Java, C#\r\n            </ListGroupItem>\r\n            <ListGroupItem variant='light' style={{backgroundColor: \"#222222\"}}>\r\n              <b style={{color: \"#CCCECF\"}}>Technologies: </b>\r\n              Unity Engine\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Projects","import React, { useLayoutEffect, useState } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport './Resume.css'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst Resume = () => {\r\n  const [width, height] = useWindowSize();\r\n  var pdfWidth = Math.min(width - 50, 1024);\r\n  return (\r\n    <Container fluid className=\"resume\" id=\"resume\">\r\n      <h1>Resume</h1>\r\n      <h5>My skills, experience, and portfolio on a single page.</h5>\r\n      <Row className=\"resume-pdf\">\r\n        <Document file={'/resume.pdf'}>\r\n          <Page pageNumber={1} renderAnnotationLayer={false} renderTextLayer={false} width={pdfWidth}/>\r\n        </Document>\r\n      </Row>\r\n      <text>Feel free to download my resume <a href={'/resume.pdf'} target=\"_blank\">here</a>.</text>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Resume","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst Footer = () => (\r\n  <Container fluid className=\"footer\">\r\n    <text>\r\n        <i style={{color: \"#9A9DA0\"}}>This website was made from scratch using ReactJS, React-Bootstrap, and React-PDF.</i>\r\n        <br/>\r\n        <text style={{color: \"#CCCECF\"}}>© 2020 Ryan Niu</text>\r\n    </text>\r\n  </Container>\r\n);\r\n\r\nexport default Footer","import React from 'react'\nimport StickyNav from './components/StickyNav'\nimport Welcome from './sections/Welcome'\nimport About from './sections/About'\nimport Experience from './sections/Experience'\nimport Projects from './sections/Projects'\nimport Resume from './sections/Resume'\nimport Footer from './sections/Footer'\nimport './App.css'\n\n\nconst App = () => (\n    <>\n        <StickyNav/>\n        <Welcome/>\n        <About/>\n        <Experience/>\n        <Projects/>\n        <Resume/>\n        <Footer/>\n    </>\n);\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}