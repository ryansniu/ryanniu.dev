{"version":3,"sources":["components/StickyNav.js","sections/Welcome.js","sections/About.js","sections/Experience.js","sections/Projects.js","sections/Resume.js","sections/Footer.js","App.js","serviceWorker.js","index.js"],"names":["StickyNav","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","off","Navbar","sticky","expand","bg","variant","to","smooth","offset","duration","Brand","Toggle","aria-controls","Collapse","id","Nav","className","spy","style","textDecoration","textAlign","Link","Welcome","Container","fluid","Row","Col","lg","Image","src","roundedCircle","alt","fontSize","href","target","rel","About","Experience","Projects","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","pdfWidth","Math","min","file","pageNumber","renderAnnotationLayer","renderTextLayer","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b779547.chunk.js","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\r\nimport { Link } from 'react-scroll'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport './StickyNav.css'\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst StickyNav = () => {\r\n  const [width, height] = useWindowSize();\r\n  var off = width < 667 ? -210 : 0;\r\n  return (\r\n    <Navbar sticky=\"top\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"welcome\" smooth={true} offset={-100 + off} duration= {500}>\r\n        <Navbar.Brand>\r\n          <h1>Ryan Niu</h1>\r\n        </Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\" />\r\n        <Nav>\r\n          <Link to=\"about\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>About</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n\r\n          <Link to=\"experience\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Experience</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n\r\n          <Link to=\"projects\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Projects</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n          \r\n          <Link to=\"resume\" smooth={true} spy={true} offset={-80 + off} duration= {500} style={{ textDecoration: 'none', textAlign: 'center' }}>\r\n            <Nav.Link>\r\n              <h4>Resume</h4>\r\n            </Nav.Link>\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default StickyNav;","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\nimport './Welcome.css'\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <Container fluid>\r\n            <Row className='welcome'>\r\n                <Col lg={7}>\r\n                    <Image className='pfp' src={'/pfp.jpg'} roundedCircle fluid alt='Ryan Niu'/>\r\n                </Col>\r\n                <Col lg={5} className='intro-text'>\r\n                    <h1 style={{fontSize: 50}}>Hi, I'm Ryan!</h1>\r\n                    <text>Computer Engineer from UC Santa Barbara\r\n                        trying to learn webdev but it clearly is a struggle.\r\n                        This website is also under construction.\r\n                        Try not to break anything!\r\n                    </text>\r\n                    <div>\r\n                        <a href=\"https://github.com/ryansniu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/github-64.png'} fluid alt='Github'/>\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/ryansniu/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/linkedin-64.png'} fluid alt='LinkedIn'/>\r\n                        </a>\r\n                        <a href=\"https://devpost.com/ryansniu\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/devpost-64.png'} fluid alt='Devpost'/>\r\n                        </a>\r\n                        <a href=\"mailto:ryanniu314@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <Image className='home-icons' src={'/email-64.png'} fluid alt='Email'/>\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst About = () => (\r\n  <Container fluid className=\"about\" id=\"about\">\r\n      <h1>About</h1>\r\n      <h5>Learn more about my hobbies and interests.</h5>\r\n  </Container>\r\n);\r\n\r\nexport default About","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Experience = () => (\r\n  <Container fluid className=\"experience\" id=\"experience\">\r\n    <h1>Experience</h1>\r\n    <h5>A summary of my skills in the industry.</h5>\r\n  </Container>\r\n);\r\n\r\nexport default Experience","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Projects = () => (\r\n  <Container fluid className=\"projects\" id=\"projects\">\r\n    <h1>Projects</h1>\r\n    <h5>A comprehensive portfolio of my personal projects.</h5>\r\n  </Container>\r\n);\r\n\r\nexport default Projects","import React, { useLayoutEffect, useState } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport './Resume.css'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst Resume = () => {\r\n  const [width, height] = useWindowSize();\r\n  var pdfWidth = Math.min(width - 50, 1024);\r\n  return (\r\n    <Container fluid className=\"resume\" id=\"resume\">\r\n      <h1>Resume</h1>\r\n      <h5>My skills, experience, and portfolio on a single page.</h5>\r\n      <Row className=\"resume-pdf\">\r\n        <Document file={'/resume.pdf'}>\r\n          <Page pageNumber={1} renderAnnotationLayer={false} renderTextLayer={false} width={pdfWidth}/>\r\n        </Document>\r\n      </Row>\r\n      <text>Feel free to download my resume <a href={'/resume.pdf'} target=\"_blank\">here</a>.</text>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Resume","import React from 'react'\r\nimport { Image, Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => (\r\n  <Container fluid className=\"footer\">\r\n    <text>\r\n        <i>This website was made by scratch using ReactJS, React-Bootstrap, and React-PDF.</i>\r\n        <br/>\r\n        © 2020 Ryan Niu\r\n    </text>\r\n  </Container>\r\n);\r\n\r\nexport default Footer","import React from 'react'\nimport StickyNav from './components/StickyNav'\nimport Welcome from './sections/Welcome'\nimport About from './sections/About'\nimport Experience from './sections/Experience'\nimport Projects from './sections/Projects'\nimport Resume from './sections/Resume'\nimport Footer from './sections/Footer'\nimport './App.css'\n\n\nconst App = () => (\n    <>\n        <StickyNav/>\n        <Welcome/>\n        <About/>\n        <Experience/>\n        <Projects/>\n        <Resume/>\n        <Footer/>\n    </>\n);\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}